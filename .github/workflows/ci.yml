name: CI

on:
  pull_request:
  push:
    branches: master
    tags:
    - 'v*'

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v1
    - name: set PY
      run: echo "::set-env name=PY::$(python --version --version | sha256sum | cut -d' ' -f1)"
    - uses: actions/cache@v1
      with:
        path: ~/.cache/pre-commit
        key: pre-commit|${{ env.PY }}|${{ hashFiles('.pre-commit-config.yaml') }}
    - uses: pre-commit/action@v1.0.0

  checks:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
        - 2.7
        - 3.5
        - 3.8
    name: Check Python ${{ matrix.python-version }}
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install package
      run: python -m pip install -e .[test]

    - name: Requirements check
      run: python -m pip list

    - name: Test package
      run: python -m pytest

  notebooks:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install package
      run: python -m pip install -e .[test]
    - name: Install notebook requirements
      run: python -m pip install nbconvert jupyter_client ipykernel
    - name: Run the notebooks inplace
      run: jupyter nbconvert --execute --inplace notebooks/*.ipynb



  dist:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: actions/setup-python@v1
      with:
        python-version: 3.8

    - name: Install wheel and sdist requirements
      run: python -m pip install "setuptools>=42.0" "setuptools_scm[toml]>=3.4" "wheel"

    - name: Build sdist
      run: python setup.py sdist

    - name: Build wheel
      run: >
        python -m pip wheel . -w wheels &&
        ls -lh wheels &&
        mkdir -p dist &&
        cp wheels/particle*any.whl dist/

    - uses: actions/upload-artifact@v1
      with:
        name: DistPackage
        path: dist

    - uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.pypi_password }}
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')

  zipapp:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - name: Install wheel and sdist requirements
      run: python -m pip install "setuptools>=42.0" "setuptools_scm[toml]>=3.4" "wheel"

    - name: Add version
      run: python setup.py sdist

    - name: Install requirements
      run: python -m pip install attrs hepunits importlib_resources --target src

    - name: Make ZipApp
      run: python -m zipapp -c -p "/usr/bin/env python3" -m "particle.__main__:main" -o ../particle.pyz .
      working-directory: src

    - uses: actions/upload-artifact@v1
      with:
        name: ZipApp
        path: particle.pyz

    - name: "Get upload_url"
      run: echo "::set-output name=upload_url::https://uploads.github.com/repos/$GITHUB_REPOSITORY/releases/$(jq --raw-output '.release.id' $GITHUB_EVENT_PATH)/assets{?name,label}"
      id: release
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
      # Tag *must* be made from the GitHub release interface at the moment

    - name: Upload Release Asset
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.release.outputs.upload_url }}
        asset_path: ./particle.pyz
        asset_name: particle.pyz
        asset_content_type: application/zip
