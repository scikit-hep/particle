name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
    - master

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - uses: actions/setup-python@v5
      with:
        python-version: "3.x"
    - uses: pre-commit/action@v3.0.1
      with:
        extra_args: --all-files --hook-stage manual
    - name: PyLint
      run: |
        echo "::add-matcher::$GITHUB_WORKSPACE/.github/matchers/pylint.json"
        pipx run nox -s pylint

  checks:
    name: Check ${{ matrix.os }} üêç ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
        include:
          - {os: macos-13, python-version: '3.8'}
          - {os: macos-13, python-version: '3.13'}
          - {os: windows-latest, python-version: '3.8'}
          - {os: windows-latest, python-version: '3.13'}

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        allow-prereleases: true

    - uses: astral-sh/setup-uv@v3

    - name: Test package
      run: uvx nox -s tests --force-python=${{ matrix.python-version }}

    - name: Test coverage with Codecov
      uses: codecov/codecov-action@v4
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    - name: Test docstrings with doctest
      if: runner.os == 'Linux' && matrix.python-version == '3.12'
      run: uvx nox -s tests -- --doctest-modules src/particle --ignore=src/particle/particle/convert.py

  notebooks:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - uses: actions/setup-python@v5
      with:
        python-version: "3.x"

    - uses: astral-sh/setup-uv@v3

    - name: Install package
      run: uv pip install --system -e .[test]

    - name: Install notebook requirements
      run: uv pip install --system nbconvert jupyter_client ipykernel

    - name: Run the notebooks inplace
      run: jupyter nbconvert --execute --inplace notebooks/*.ipynb


  zipapp:
    name: ZipApp
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - uses: wntrblm/nox@2024.04.15
      with:
        python-versions: "3.8"

    - name: Make ZipApp
      run: nox -s zipapp

    - uses: actions/upload-artifact@v4
      with:
        name: zipapp
        path: particle.pyz
