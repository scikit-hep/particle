name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
    - master


jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - uses: actions/setup-python@v4
      with:
        python-version: "3.x"
    - uses: pre-commit/action@v3.0.0
      with:
        extra_args: --all-files --hook-stage manual
    - name: PyLint
      run: |
        echo "::add-matcher::$GITHUB_WORKSPACE/.github/matchers/pylint.json"
        pipx run nox -s pylint

  checks:
    name: Check ${{ matrix.os }} üêç ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
        include:
          - {os: macos-latest, python-version: '3.7'}
          - {os: macos-latest, python-version: '3.11'}
          - {os: windows-latest, python-version: '3.7'}
          - {os: windows-latest, python-version: '3.11'}

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install package
      run: python -m pip install -e .[test]

    - name: Requirements list
      run: python -m pip list

    - name: Test package
      run: python -m pytest ./tests --cov=src/particle --cov-report=xml

    - name: Test coverage with Codecov
      if: "runner.os != 'Windows' && matrix.python-version != 3.7"
      uses: codecov/codecov-action@v3

    - name: Test docstrings with doctest
      if: "runner.os == 'Linux' && matrix.python-version == 3.11"
      run: python -m pytest --doctest-modules src/particle --ignore-glob="src/particle/particle/convert.py"

  notebooks:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - uses: actions/setup-python@v4
      with:
        python-version: "3.x"

    - name: Install package
      run: python -m pip install -e .[test]

    - name: Install notebook requirements
      run: python -m pip install nbconvert jupyter_client ipykernel

    - name: Run the notebooks inplace
      run: jupyter nbconvert --execute --inplace notebooks/*.ipynb


  zipapp:
    name: ZipApp
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - uses: wntrblm/nox@2022.11.21

    - name: Make ZipApp
      run: nox -s zipapp

    - uses: actions/upload-artifact@v3
      with:
        name: zipapp
        path: particle.pyz
