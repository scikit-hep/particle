# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

jobs:

- job: 'Test'

  pool:
    vmImage: $(imageName)

  strategy:
    matrix:
      Python27-Linux:
        imageName: 'ubuntu-16.04'
        python.version: '2.7'
      Python27-Win:
        imageName: 'vs2017-win2016'
        python.version: '2.7'
      Python35-Linux:
        imageName: 'ubuntu-16.04'
        python.version: '3.5'
      Python36-Linux:
        imageName: 'ubuntu-16.04'
        python.version: '3.6'
      Python37-Linux:
        imageName: 'ubuntu-16.04'
        python.version: '3.7'
      Python37-Win:
        imageName: 'vs2017-win2016'
        python.version: '3.7'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - script: |
      python -m pip install --upgrade pip
      pip install pytest pytest-cov
    displayName: 'Install dependencies'

  - script: |
      pip install -e .
    displayName: 'Install package'

  - script: |
      pytest tests --doctest-modules --junitxml=junit/test-results.xml --cov=particle --cov-report=xml --cov-report=html
    displayName: 'Test with pytest and collect coverage metrics'

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-*.xml'
      testRunTitle: 'Publish test results for Python $(python.version)'
    condition: succeededOrFailed()

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
      reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov'
